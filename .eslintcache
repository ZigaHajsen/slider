[{"E:\\Programiranje\\react-projects\\7-slider\\src\\index.tsx":"1","E:\\Programiranje\\react-projects\\7-slider\\src\\components\\index.ts":"2","E:\\Programiranje\\react-projects\\7-slider\\src\\components\\App\\AppStyles.ts":"3","E:\\Programiranje\\react-projects\\7-slider\\src\\components\\App\\App.tsx":"4"},{"size":157,"mtime":1606151086877,"results":"5","hashOfConfig":"6"},{"size":45,"mtime":1606151554449,"results":"7","hashOfConfig":"6"},{"size":2587,"mtime":1606170776696,"results":"8","hashOfConfig":"6"},{"size":2188,"mtime":1606171546362,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"5bk41b",{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},"E:\\Programiranje\\react-projects\\7-slider\\src\\index.tsx",[],"E:\\Programiranje\\react-projects\\7-slider\\src\\components\\index.ts",[],"E:\\Programiranje\\react-projects\\7-slider\\src\\components\\App\\AppStyles.ts",[],"E:\\Programiranje\\react-projects\\7-slider\\src\\components\\App\\App.tsx",["19"],"import React, { useState, useEffect } from 'react';\r\nimport { FiChevronRight, FiChevronLeft } from 'react-icons/fi';\r\nimport { FaQuoteRight } from 'react-icons/fa';\r\nimport data from '../../data.json';\r\nimport {\r\n  Section,\r\n  Title,\r\n  TitleText,\r\n  TitleSpan,\r\n  SectionCenter,\r\n  PersonImage,\r\n  PersonName,\r\n  PersonTitle,\r\n  PersonQuote,\r\n  PreviousButton,\r\n  NextButton,\r\n} from './AppStyles';\r\nimport './AppArticleStyles.css';\r\n\r\nconst App: React.FC = () => {\r\n  const [people, setPeople] = useState(data);\r\n  const [index, setIndex] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const lastIndex = people.length - 1;\r\n\r\n    if (index < 0) {\r\n      setIndex(lastIndex);\r\n    }\r\n\r\n    if (index > lastIndex) {\r\n      setIndex(0);\r\n    }\r\n  }, [index, people]);\r\n\r\n  useEffect(() => {\r\n    let slider = setInterval(() => {\r\n      setIndex(index + 1);\r\n    }, 3000);\r\n\r\n    return () => clearInterval(slider);\r\n  }, [index]);\r\n\r\n  return (\r\n    <Section>\r\n      <Title>\r\n        <TitleText>\r\n          <TitleSpan>/</TitleSpan>reviews\r\n        </TitleText>\r\n      </Title>\r\n      <SectionCenter>\r\n        {people.map((person, personIndex) => {\r\n          const { id, image, name, title, quote } = person;\r\n          let position = 'nextSlide';\r\n\r\n          if (personIndex === index) {\r\n            position = 'activeSlide';\r\n          }\r\n\r\n          if (\r\n            personIndex === index - 1 ||\r\n            (index === 0 && personIndex === people.length - 1)\r\n          ) {\r\n            position = 'lastSlide';\r\n          }\r\n\r\n          return (\r\n            <article className={position} key={id}>\r\n              <PersonImage src={image} alt={name} />\r\n              <PersonName>{name}</PersonName>\r\n              <PersonTitle>{title}</PersonTitle>\r\n              <PersonQuote>{quote}</PersonQuote>\r\n              <FaQuoteRight />\r\n            </article>\r\n          );\r\n        })}\r\n        <PreviousButton onClick={() => setIndex(index - 1)}>\r\n          <FiChevronLeft />\r\n        </PreviousButton>\r\n        <NextButton onClick={() => setIndex(index + 1)}>\r\n          <FiChevronRight />\r\n        </NextButton>\r\n      </SectionCenter>\r\n    </Section>\r\n  );\r\n};\r\n\r\nexport default App;\r\n",{"ruleId":"20","severity":1,"message":"21","line":21,"column":18,"nodeType":"22","messageId":"23","endLine":21,"endColumn":27},"@typescript-eslint/no-unused-vars","'setPeople' is assigned a value but never used.","Identifier","unusedVar"]